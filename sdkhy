'''a=input()#year
b=input()#branch
per=int(input())
bc=int(input())
if ((a==2 or a==3)and (b=='bsc' or b=='bca') and (per>=70) and (bc==0)):
    print("yes")
else:
    print("Not")'''

'''x=int(input())
c=0
while x!=0:
    '''
'''#power of a number
base = int(input())
exp=int(input())
res=1
while (exp):
    if (exp &1==0):
        exp=exp>>1
        base=base*base
    else:
        exp-=1
        res=res*base
print(res)
'''

'''
00 01 02 03
10 11 12 13
20 21 22 23
for i in range(5):#-->1 
    for j in range(5):#--> 0 1 2 3 4 
        print(ar[i][j])


s=list(map(int,input().split()))
e=list(map(int,input().split()))


def p(n):
    c=0
    while n!=1:
        if n%2==0:
            n//=2
        else:
            n=3*n+1
        c=c+1
    return c
l=[]
for i in range(1,10**6):
    l.append(p(i))
print(l.index(max(l))+1)



import math
def is_prime2(n):
    if n==1:
        return False
    m=int(math.sqrt(n))
    for i in range(2,m+1):
        if n%i ==0:
            return False
    return True

n=int(input())
print(is_prime2(n))

import math
def is_prime2(n):
    if n==1:
        return False
    m=int(math.sqrt(n))
    for i in range(2,m+1):
        if n%i ==0:
            return False
    return True

a,b=map(int,input().split())
for i in range(a,b+1):
    if is_prine2(i)==False:
        print(i,end=' ')'''







'''import math
def is_prime2(n):
    if n==1:
        return False
    m=int(math.sqrt(n))
    for i in range(2,m+1):
        if n%i ==0:
            return False
    return True
def pre_prime(n):
    n=n-1
    while is_prime2(n)==False:
        n=n-1
    return n
def nxt_prime(n):
    n=n+1
    while is_prime2(n)==False:
        n=n+1
    return n
n=int(input())
pp=pre_prime(n)
np=nxt_prime(n)
if n-pp<pp-n:
    print(pp)
elif n-pp>pp-n:
    print(np)
else:
    print(pp,np)

list(filter(is_prime2(1,10)))

n=5
def F(i):
    if (i>=n):










n=5
def d(i):
    if(i>10):
        return
    print(i)
    d(i+1)
d(1)





def d(i):
    if(i<=10):
        return
    d(i-1)
    print(i)
    
d(10)

n=int(input())
for i in range(n):
    for j in range(n):
        c=n[i]+n[j]
    print(c)




def f(ind,n,t,ds,lis,arr):
    if(ind>=n):
        if (t==0):
            lis.append(ds.copy())
        return
    #pick all
    if (arr[ind]<=t):
        ds.append(arr[ind])
        t-=arr[ind]
        F=(ind,n,t,ds,lis,arr)
        t+=arr[ind]
        ds.pop()
    #nin pick all
    F(ind+1,n,t,ds,lis,arr)









class Node:
    def _init_ (self, value):
        self.data = value
